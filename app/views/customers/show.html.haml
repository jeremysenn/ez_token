.content-wrapper
  -# .container
  / Content Header (Page header)
  %section.content-header
    = render 'shared/flash_messages'
    - if @customer.first_name.blank? or @customer.last_name.blank? 
      %p
        %div{:class => "alert alert-dismissible alert-danger"}
          Please enter first and last name:
          %a.btn.btn-primary.btn-sm{href: edit_customer_path(@customer)}
            Update Profile
    %h3
      %i.fa.fa-male
      = @customer.identity
      %a{href: edit_customer_path(@customer)}
        %i.fa.fa-pencil
      - if @account and @account.active? and (current_user.administrator? or (current_user.collaborator? and current_user.can_pay_from_corporate?))
        .pull-right
          %a.btn.btn-success{href: '#', "data-toggle" => "modal", "data-target" => "#one_time_payment"}
            %i.fa.fa-dollar
            Direct Pay
        = render 'one_time_payment'
    
    %p
      - unless @events.blank?
        .btn-group
          - @events.each do |event|
            -# %a.btn{href: customer_path(event_id: event.id, account_id: @account.id), class: "#{@event.id == event.id ? 'bg-orange' : 'btn-default'}", data: {disable_with: "<i class='fa fa-calendar'></i> #{event.title.html_safe}"}}
            %a.btn{href: customer_path(event_id: event.id), class: "#{@event.id == event.id ? 'bg-orange' : 'btn-default'}", data: {disable_with: "<i class='fa fa-calendar'></i> #{event.title.html_safe}"}}
              %i.fa.fa-calendar
              = event.title.truncate(15).html_safe
      - else
        (no events)
  
    -# 
      - unless @accounts.blank? or @accounts.count == 1
        .btn-group
          -# @accounts.each_with_index do |account, index|
          - @accounts.joins(:events).where(events: {id: @event.id}).each_with_index do |account, index|
            - unless browser.device.mobile?
              -# %a.btn{href: customer_path(account_id: account.id), class: "#{@account.id == account.id ? 'btn-info' : 'btn-default'}", data: {disable_with: "<i class='fa fa-google-wallet'></i> Wallet #{index + 1} <div class='text-center'><small>(#{account.account_type.description})</small></div>"}}
              %a.btn{href: customer_path(account_id: account.id), class: "#{@account.id == account.id ? 'btn-info' : 'btn-default'}", data: {disable_with: "<i class='fa fa-google-wallet'></i> #{account.account_type.description}"}}
                %i.fa.fa-google-wallet
                = account.account_type.description
                -#
                  Wallet
                  = "#{index + 1}"
                  .text-center
                    %small= "(#{account.account_type.description})"
            - else
              %a.btn{href: customer_path(account_id: account.id), class: "#{@account.id == account.id ? 'btn-info' : 'btn-default'}", data: {disable_with: "<i class='fa fa-google-wallet'></i> Wallet #{index + 1}"}}
                %i.fa.fa-google-wallet
                = account.account_type.description.truncate(10)
                -#
                  Wallet
                  = "#{index + 1}"
    
      -#
        %br
        = "#{@account.blank? ? 'No company' : @account.company.name}"
    
  / Main content
  %section.content
    / Default box
    .row
      .col-md-3
        / Profile Image
        .box.box-primary
          .box-header.with-border
            -# %h5.text-muted
            %h3.box-title
              - if not @account.active?
                %strong.text-danger 
                  %i.fa.fa-warning
                  Inactive
                %br
              %i.fa.fa-google-wallet
              = @account.account_type.blank? ? 'Wallet' : "#{@account.account_type.description} Wallet"
          .box-tools.pull-right
            -#
              %a.btn.btn-box-tool{href: edit_customer_path(@customer), :type => "button"}
                %i.fa.fa-edit.fa-lg
          .box-body.box-profile
            - unless @account.blank?
              -# .text-center
              %strong Balance
              %p.text-muted
                - unless @account.MinBalance.blank? or @account.MinBalance.zero?
                  %span.btn.btn-info{"data-toggle" => "tooltip", :title => "#{number_to_currency(@account.balance)} (balance)<br>#{number_to_currency(@account.minimum_balance)} (#{@account.credit_balance? ? 'credit' : 'minimum'})<br><strong>#{number_to_currency(@account.available_balance)} (available)</strong>".html_safe, "data-placement" => "left"}
                    = number_to_currency(@account.Balance)
                - else
                  = number_to_currency(@account.Balance)
                -# if (@account and (@account.can_fund_by_cc? or @account.can_fund_by_ach?) and @account.user and @account.user == current_user)
                - if (@account and (@account.can_fund_by_cc? or @account.can_fund_by_ach?) and @account.users.include?(current_user))
                  %a.btn.btn-default{href: edit_account_path(@account)}
                    %i.fa.fa-credit-card
                    Fund
              %hr/
              %strong Holders
              - if current_user.can_edit_accounts?
                %span.pull-right
                  %a.btn.btn-primary.btn-sm{href: '#', "data-toggle" => "modal", "data-target" => "#add_family_member_modal"}
                    %i.fa.fa-plus
                    New
                = render 'quick_create_form_modal' if current_user.can_edit_accounts?
              %p.text-muted
                = @account.customers.map{ |customer| link_to(customer.identity,customer_path(customer, account_id: @account.id))}.join(", ").html_safe
              
              -#
                .text-center
                  = "#{@account.blank? ? '' : @account.company.name}"
                  .btn-group-vertical
                    - unless @events.blank?
                      - @events.each do |event|
                        %a.btn{href: customer_path(event_id: event.id), class: "#{@event.id == event.id ? 'btn-info' : 'btn-default'}", data: {disable_with: "<i class='fa fa-calendar'></i> #{event.title}"}}
                          %i.fa.fa-calendar
                          = event.title
                  - if @events.blank?
                    .text-muted (no events)
            %h3.profile-username.text-center
              =# current_user.consumer? ? current_user.full_name : @customer.full_name
              - if @customer.anonymous?
                .text-danger Anonymous Payee
            - if @account and @account.active? and current_user.basic? and (@account.can_be_pulled_by_scan? or @account.can_be_pushed_by_scan?)
              = render 'my_code'
              =# render 'barcode'
              =# render 'consumer_qr_code_payment'

            - if not (current_user.administrator? or current_user.super?) and @account and @account.active? and @event and @account.can_pull?
              - if current_user.collaborator? or not @account.hide_pull_payment_from_holder?
                #accordion.panel-group{"aria-multiselectable" => "true", :role => "tablist"}
                  -# %p
                  .panel.panel-default
                    #headingOne.panel-heading{:role => "tab"}
                      %h4.panel-title
                        %a.btn.btn-lg.btn-success.btn-block{"aria-controls" => "collapseOne", "aria-expanded" => "true", "data-parent" => "#accordion", "data-toggle" => "collapse", :href => "#collapseOne", :role => "button", class: "#{(@account.events.blank? or (@event.accounts.can_be_pulled_by_search.blank? and @event.accounts.can_be_pulled_by_scan.blank?)) ? 'disabled' : ''}"}
                          %i.fa.fa-long-arrow-right
                          Pull Payment
                    #collapseOne.panel-collapse.collapse.in{"aria-labelledby" => "headingOne", :role => "tabpanel"}
                      .card.card-body
                        = render 'request_payment'
            - if not (current_user.administrator? or current_user.super?) and @account and @account.active? and @event and @account.available_balance > 0 and @account.can_send_payment?
              %p
                .panel.panel-default
                  #headingTwo.panel-heading{:role => "tab"}
                    %h4.panel-title
                      %a.btn.btn-lg.btn-success.btn-block.collapsed{"aria-controls" => "collapseTwo", "aria-expanded" => "false", "data-parent" => "#accordion", "data-toggle" => "collapse", :href => "#collapseTwo", :role => "button", class: "#{@account.events.blank? ? 'disabled' : ''}"}
                        %i.fa.fa-long-arrow-left
                        Send Payment
                  #collapseTwo.panel-collapse.collapse{"aria-labelledby" => "headingTwo", :role => "tabpanel"}
                    .card.card-body
                      = render 'send_payment'
            -# if (current_user.basic? or (current_user.admin? and @customer.user.blank?)) and @account and @account.active? and @account.available_balance > 0 and (@account.can_withdraw? or @account.withdrawal_all?)
            - if @account and @account.active? and @account.available_balance > 0 and (@account.can_withdraw? or @account.withdrawal_all?)
              - unless @account.withdrawal_all?
                %p
                  .panel.panel-default
                    #headingThree.panel-heading{:role => "tab"}
                      %h4.panel-title
                        %a.btn.btn-lg.btn-default.btn-block.collapsed{"aria-controls" => "collapseThree", "aria-expanded" => "false", "data-parent" => "#accordion", "data-toggle" => "collapse", :href => "#collapseThree", :role => "button"}
                          %i.fa.fa-money
                          Withdraw
                    #collapseThree.panel-collapse.collapse{"aria-labelledby" => "headingThree", :role => "tabpanel"}
                      .panel-body
                        = render 'withdrawal'
              - else
                / Withdraw all
                = render 'withdrawal_all'
                -# %a.btn.btn-default.btn-lg.btn-block{href: send_barcode_sms_message_customer_path(@customer, account_id: @account.id), data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Withdraw"}}
                -# %a.btn.btn-default.btn-lg.btn-block{href: send_barcode_link_sms_message_account_path(@account.id)}
                -#
                  %a.btn.btn-default.btn-lg.btn-block{href: nil, class: 'send_qrcode_button', "data-account-id" => @account.id, "data-amount" => 0}
                    %i.fa.fa-money
                    %i.fa.fa-spinner.fa-spin{style: 'display:none;'}
                    Withdraw
              -#
                - if @account and @account.balance > 0 and not current_user.administrator?
                  .box.box-success.collapsed-box.box-solid
                    %button.btn.btn-success.btn-block{"data-widget" => "collapse", :type => "button", style: 'color: white;'}
                      %h5
                        %b 
                          %i.fa.fa-long-arrow-left
                          Send Payment
                    .box-body
                      = render 'send_payment'
                  .box.box-success.collapsed-box.box-solid
                    %button.btn.btn-success.btn-block.btn-box-tool{"data-widget" => "collapse", :type => "button", style: 'color: white;'}
                      %h5 
                        %b 
                          %i.fa.fa-money
                          Withdrawal
                    .box-body
                      = render 'withdrawal'
                
            -# if @account and @account.active? and current_user.administrator? and not @customer.anonymous?
            -#
              - if @account.available_balance > 0 and @account.withdrawal_all?
                -# %a.btn.btn-default.btn-block{href: send_barcode_sms_message_customer_path(@customer, account_id: @account.id), data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Send Payment Code"}}
                -# %a.btn.btn-default.btn-block{href: send_barcode_link_sms_message_account_path(@account.id), data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Send Payment Code"}}
                %a.btn.btn-default.btn-block{href: nil, class: 'send_qrcode_button', "data-account-id" => @account.id, "data-customer-id" => @customer.id, "data-amount" => 0, style: 'margin-top: 10px;'}
                  %h5
                    %i.fa.fa-qrcode
                    %i.fa.fa-spinner.fa-spin{style: 'display:none;'}
                    Send Code

          / /.box-body
        / /.box
        
        / Details Box
        .box.box-primary
          .box-header.with-border
            %h3.box-title 
              Account Info
            -#
              .box-tools.pull-right
                %button.btn.btn-box-tool{"data-widget" => "collapse", :type => "button"}
                  %i.fa.fa-minus
          / /.box-header
          .box-body
            %strong 
              %i.fa.fa-user-circle.margin-r-5
              Avatar
            %p.text-center
              - unless @customer.avatar.blank?
                = image_tag(asset_path(@customer.avatar.url), class: 'center image profile-user-img img-responsive img-circle')
              - else
                = image_tag(asset_path('avatar_holder_image.png'), class: 'profile-user-img img-responsive img-circle')
            - unless @account.blank? or @contract.blank? or @signature.blank?
              %strong
                %i.fa.fa-handshake-o.margin-r-5
                Contract
              %p
                %a{href: '#', "data-toggle" => "modal", "data-target" => "#contract_modal"}
                  = @contract.title
                  = "(#{@contract.version ? t('fine_print.contract.status.version', version: @contract.version.to_s) : t('fine_print.contract.status.draft')})"
              .modal.fade{id: "contract_modal", "aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
                .modal-dialog{:role => "document"}
                  .modal-content
                    .modal-header
                      %strong
                        = @contract.title
                        = "(#{@contract.version ? t('fine_print.contract.status.version', version: @contract.version.to_s) : t('fine_print.contract.status.draft')})"
                      = link_to "×", '#', :class => "close", "data-dismiss" => "modal"
                    .modal-body
                      %p= @contract.content.html_safe
                      %p
                        %strong= "Signed by #{@customer.user.full_name} on"
                        = @signature.blank? ? 'N/A' : @signature.created_at.strftime("%B %d %Y at %I:%M%p UTC")
                    .modal-footer
                      %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Close
                      %a.btn.btn-primary{href: fine_print.signature_url(@signature, format: :pdf), target: '_blank;'}
                        %i.fa.fa-print
                        Print
            %strong
              %i.fa.fa-envelope.margin-r-5
              Email
            %p.text-muted
              = @customer.user.blank? ? @customer.email : @customer.user.email
            %hr/
            - unless @customer.phone.blank?
              .pull-right
                %a.btn.btn-default.btn-xs{:href => "#", "data-toggle" => "modal", "data-target" => "#sms_message"}
                  %i.fa.fa-comment
                  Message
              = render 'sms_message'
            %strong
              %i.fa.fa-mobile.margin-r-5
              Phone
            %p.text-muted
              = @customer.user.blank? ? @customer.phone : @customer.user.phone
              
            - unless @customer.DOB.blank?
              %strong
                %i.fa.fa-calendar.margin-r-5
                DOB
              %p.text-muted
                = @customer.DOB.strftime('%-m/%-d/%Y')
            - unless @customer.SSN.blank?
              %strong
                SSN
              %p.text-muted
                = "****#{@customer.last_4_decrypted_ssn}"
            - if current_user.can_edit_accounts?
              %hr/
              - if @customer.user.blank? and not @customer.phone.blank?
                .pull-right
                  = form_for(@customer) do |f|
                    =# f.hidden_field :create_payee_user_flag, :value => true
                    = f.hidden_field :create_basic_user_flag, :value => true
                    %button.btn.btn-default{:type => "submit", data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Invite"}}
                      %i.fa.fa-comment
                      Invite
              %strong
                %i.fa.fa-user.margin-r-5
                User Web Portal
              %p.text-muted
                - unless @customer.user.blank?
                  - if @customer.user.confirmed?
                    Sign In Count:
                    = @customer.user.sign_in_count
                    %br
                    Current Sign In At:
                    = @customer.user.current_sign_in_at.in_time_zone(current_user.time_zone).strftime('%-m/%-d/%Y') unless @customer.user.current_sign_in_at.blank?
                    %br
                    Last Sign In At:
                    = @customer.user.last_sign_in_at.in_time_zone(current_user.time_zone).strftime('%-m/%-d/%Y') unless @customer.user.last_sign_in_at.blank?
                    %br
                    Current Sign In IP:
                    = @customer.user.current_sign_in_ip
                    %br
                    Last Sign In IP:
                    = @customer.user.last_sign_in_ip
                  - else
                    .text-danger Waiting for user to confirm account
                    %a.btn.btn-default.btn-block{:href => send_confirmation_link_sms_message_customer_path(@customer), data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Send Confirmation Link"}}
                      %i.fa.fa-comment
                      Send Confirmation Link
                    - if current_user.can_edit_users?
                      %p
                        %a{"aria-controls" => "more", "aria-expanded" => "false", "data-toggle" => "collapse", :href => "#more"}
                          More
                      #more.collapse
                        .card.card-body
                          %a.btn.btn-primary{:href => confirm_users_admin_path(@customer.user), data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Confirm"}}
                            %i.fa.fa-thumbs-up
                            Confirm

                - else
                  Portal user has not been created
              %hr/
              %strong
                %i.fa.fa-file-text-o.margin-r-5
                Notes
              %p.text-muted
                = "EZcash ID: #{@customer.id}"
                - unless @customer.Registration_Source.blank?
                  %br
                  = "Source: #{@customer.Registration_Source}"
                - unless @customer.ssn.blank?
                  %br
                  = "SSN/TIN: ****#{@customer.decrypted_ssn.last(4)}"
              -# %p= link_to 'Delete', @customer, :method => :delete, class: 'btn btn-danger btn-sm', :data => { :confirm => 'Are you sure you want to delete everything connected to this account?' }
            / /.box-body
          / /.box
      .col-md-9
        .box.box-primary
          .box-body
            %ul#myTab.nav.nav-tabs.nav-fill{:role => "tablist"}
              %li.nav-item
                %a#payments-tab.nav-link.active{"aria-controls" => "payments", "aria-selected" => "true", "data-toggle" => "tab", :href => "#payments", :role => "tab"} 
                  %i.fa.fa-dollar.fa-lg
                  = "Payments"
              - if @account and (@account.can_withdraw? or @account.withdrawal_all?)
                %li.nav-item
                  %a#withdrawals-tab.nav-link{"aria-controls" => "withdrawals", "aria-selected" => "false", "data-toggle" => "tab", :href => "#withdrawals", :role => "tab"} 
                    %i.fa.fa-money.fa-lg
                    = "Withdrawals" 
              - unless @customer.sms_messages.blank?
                %li.nav-item
                  %a#messages-tab.nav-link{"aria-controls" => "messages", "aria-selected" => "false", "data-toggle" => "tab", :href => "#messages", :role => "tab"} 
                    %i.fa.fa-comments.fa-lg
                    = "Messages" unless browser.device.mobile?
              -#
                %li.nav-item
                  %a#events-tab.nav-link{"aria-controls" => "events", "aria-selected" => "false", "data-toggle" => "tab", :href => "#events", :role => "tab"} 
                    %i.fa.fa-calendar.fa-lg
                    = "Events" 
              -#
                %li.nav-item
                  %a#checks-tab.nav-link{"aria-controls" => "checks", "aria-selected" => "false", "data-toggle" => "tab", :href => "#checks", :role => "tab"} 
                    %i.fa.fa-bank.fa-lg
                    = "Checks" unless browser.device.mobile?
                %li.nav-item
                  %a#products-tab.nav-link{"aria-controls" => "products", "aria-selected" => "false", "data-toggle" => "tab", :href => "#products", :role => "tab"} 
                    %i.fa.fa-dropbox.fa-lg
                    = "Products" unless browser.device.mobile?
            #myTabContent.tab-content
              #payments.tab-pane.fade.show.active{"aria-labelledby" => "home-tab", :role => "tabpanel"}
                -# unless @payment_transactions.blank?
                - unless @payment_and_fee_transactions.blank?
                  .table-responsive
                    -# %table.table.table-striped{class: "#{browser.device.mobile? ? 'table-sm' : ''}"}
                    %table.table.table-striped
                      %thead
                        %tr
                          %th Date
                          -#
                            %th Description
                          %th From
                          %th To
                          %th Type
                          %th Amount
                          -#
                            %th
                      %tbody
                        -# @payment_transactions.each do |payment_transaction|
                        - @payment_and_fee_transactions.each do |transaction|
                          %tr{class: transaction.reversed? ? 'table-danger' : ''}
                            %td
                              =# payment_transaction.date_time.in_time_zone(current_user.time_zone).strftime("%^b %d")
                              = link_to transaction.date_time.in_time_zone(current_user.time_zone).strftime("%^b %d"), transaction
                            -#
                              %td= "#{payment_transaction.Description.blank? ? 'N/A' : truncate(payment_transaction.Description, length: 8, omission: '')}"
                            %td
                              - if transaction.cash_deposit? or transaction.ach_deposit?
                                = transaction.Description
                              - else
                                - unless transaction.from_account_customers.blank?
                                  - from_customer = transaction.from_customer
                                  - unless from_customer.blank?  
                                    = transaction.from_customer.full_name
                                  - else
                                    = transaction.from_account_customers_list
                                  -#
                                    - payment_transaction.from_account_customers.each do |from_account_customer|
                                      = from_account_customer.full_name.blank? ? from_account_customer.phone : from_account_customer.full_name
                                  =# payment_transaction.from_account_customer.full_name.blank? ? payment_transaction.from_account_customer.phone : payment_transaction.from_account_customer.full_name
                                - else
                                  = transaction.from_account.company.CompanyName unless transaction.from_account.blank? or transaction.from_account.company.blank?
                            %td
                              - unless transaction.to_account_customers.blank? 
                                - to_customer = transaction.to_customer
                                - unless to_customer.blank?
                                  = transaction.to_customer.full_name
                                - else
                                  = transaction.to_account_customers_list
                                -#
                                  - payment_transaction.to_account_customers.each do |to_account_customer|
                                    = to_account_customer.full_name
                                =# payment_transaction.to_account_customer.full_name.blank? ? payment_transaction.to_account_customer.phone : payment_transaction.to_account_customer.full_name
                              - else
                                = transaction.to_account.company.CompanyName unless transaction.to_account.blank? or transaction.to_account.company.blank?
                            %td
                              = transaction.type
                            %td= number_to_currency(transaction.amt_auth)
                            -#
                              %td
                                %a{href: "#additional_payment_modal", "data-target" => "#additional_payment_modal", "data-toggle" => "modal"}
                                  Additional Payment
                  -# @payment_transactions.each do |payment_transaction|
                  - @payment_and_fee_transactions.each do |transaction|
                    .modal.fade{id: "additional_payment_modal", "aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
                      .modal-dialog.modal-sm{:role => "document"}
                        .modal-content
                          .modal-header
                            Additional Payment
                            = link_to "×", '#', :class => "close", "data-dismiss" => "modal"
                          .modal-body
                            = form_tag send_payment_transactions_path, method: 'post', class: 'form-horizontal' do |f|
                              = hidden_field_tag :id, transaction.id
                              .input-group.mb-3
                                .input-group-prepend
                                  %span.input-group-text $
                                =# number_field_tag :amount, nil, :placeholder => "Amount", class: "form-control input-lg", required: true, step: '1', autofocus: true, :inputmode => "numeric", :min => "0", :pattern => "[0-9]*"
                                = text_field_tag :amount, nil, :placeholder => "Amount", class: "form-control input-lg", required: true, autofocus: true, :pattern => "[0-9]*"
                                .input-group-append
                                  %span.input-group-text .00
                              .modal-footer
                                %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Cancel
                                %button.btn.btn-primary{:type => "submit", data: {disable_with: "<i class='fa fa-spinner fa-spin'></i> Submit"}} 
                                  Submit
                          %script
                            $('.modal').on('shown.bs.modal', function() {$(this).find('[autofocus]').first().focus();});
                  .pull-right
                    =# paginate @payment_transactions, param_name: 'payments'
                    = paginate @payment_and_fee_transactions, param_name: 'payments'
                - else
                  .jumbotron
                    %h3.text-center None
              
              #checks.tab-pane.fade{"aria-labelledby" => "profile-tab", :role => "tabpanel"}
                - unless @check_transactions.blank?
                  .table-responsive
                    %table.table.table-striped{class: "#{browser.device.mobile? ? 'table-sm' : ''}"}
                      %thead
                        %tr
                          %th Date
                          %td Description
                          %th Amount
                      %tbody
                        - @check_transactions.each do |check_transaction|
                          %tr
                            %td= link_to check_transaction.date_time.in_time_zone(current_user.time_zone).strftime("%^b %d"), check_transaction
                            %td Check
                            %td= number_to_currency(check_transaction.amt_auth)
                  .pull-right= paginate @check_transactions, param_name: 'checks'
                - else
                  %p.text-center None 

              #withdrawals.tab-pane.fade{"aria-labelledby" => "profile-tab", :role => "tabpanel"}
                - unless @withdrawal_transactions.blank?
                  .table-responsive
                    %table.table.table-striped{class: "#{browser.device.mobile? ? 'table-sm' : ''}"}
                      %thead
                        %tr
                          %th Date
                          %th Description
                          %th Amount
                      %tbody
                        - @withdrawal_transactions.each do |withdrawal_transaction|
                          %tr
                            %td= link_to withdrawal_transaction.date_time.in_time_zone(current_user.time_zone).strftime("%^b %d"), withdrawal_transaction
                            %td= "#{withdrawal_transaction.Description.blank? ? 'N/A' : truncate(withdrawal_transaction.Description, length: 8, omission: '')}"
                            %td= number_to_currency(withdrawal_transaction.amt_auth)
                  .pull-right= paginate @withdrawal_transactions, param_name: 'withdrawals'
                - else
                  .jumbotron
                    %h3.text-center None 

              #messages.tab-pane.fade{"aria-labelledby" => "contact-tab", :role => "tabpanel"}
                - unless @sms_messages.blank?
                  .table-responsive
                    %table.table.table-striped{class: "#{browser.device.mobile? ? 'table-sm' : ''}"}
                      %tbody
                        - @sms_messages.each do |sms_message|
                          %tr
                            %td
                              - unless sms_message.user.blank?
                                = link_to sms_message.user.full_name, sms_message
                              - else
                                = link_to sms_message.company.name, sms_message
                              %br
                              = "#{sms_message.body.blank? ? 'N/A' : truncate(sms_message.body, length: 140)}"
                            %td= sms_message.created_at.in_time_zone(current_user.time_zone).strftime("%^b %d")
                  .pull-right= paginate @sms_messages, param_name: 'messages'
                - else
                  %p.text-center None
              #products.tab-pane.fade{"aria-labelledby" => "contact-tab", :role => "tabpanel"}
                - unless current_user.customer.blank? or current_user.customer.customer_barcodes.blank?
                  .table-responsive
                    %table.table.table-striped
                      %thead
                        %tr
                          %th Barcode
                          %th Amount
                      %tbody
                        - current_user.customer.customer_barcodes.each do |customer_barcode|
                          %tr
                            %td= customer_barcode.Barcode
                            %td= number_to_currency(customer_barcode.amount)
                - else
                  %p.text-center None

= audio_tag asset_path("cash_register.mp3"), class: "cash_register_chime"

:javascript
  $('[data-toggle="tooltip"]').tooltip({html: true});

  $('.box-profile').on('click', '.send_qrcode_button', function(e) {
    var account_id, amount;
    spinner_icon = $(this).find( ".fa-spinner" );
    money_icon = $(this).find( ".fa-money" );
    money_icon.hide();
    comment_icon = $(this).find( ".fa-comment" );
    comment_icon.hide();
    spinner_icon.show();
    account_id = $(this).data("account-id");
    customer_id = $(this).data("customer-id");
    amount = $(this).data("amount");
    $.ajax({
      url: "/accounts/" + account_id + "/send_barcode_link_sms_message",
      dataType: 'json',
      data: {
        withdrawal_amount: amount,
        customer_id: customer_id
      },
      success: function(data) {
        alert("Text message code sent.");
        money_icon.show();
        comment_icon.show();
        spinner_icon.hide();
      },
      error: function(xhr) {
        var error;
        error = $.parseJSON(xhr.responseText).error;
        alert(error);
        console.log(error);
        money_icon.show();
        comment_icon.show();
        spinner_icon.hide();
      }
    });
  });