.content-wrapper
  .container
    / Main content
    %section.content
      .row
        %div.col-sm-12
          = form_tag sms_messages_path, :method => 'get', :class => "form-inline" do
            = hidden_field_tag :customer_id, @active_customer.id unless @active_customer.blank?
            %p
              = text_field_tag :start_date, nil, :placeholder => "Start Date", value: @start_date, class: "form-control input-sm", 'data-provide' => 'datepicker', 'data-date-format' => "yyyy-mm-dd", 'data-date-autoclose' => true, readonly: true
              To
              = text_field_tag :end_date, nil, :placeholder => "End Date", value: @end_date, class: "form-control input-sm", 'data-provide' => 'datepicker', 'data-date-format' => "yyyy-mm-dd", 'data-date-autoclose' => true, readonly: true
              &nbsp;
              = button_tag(:type => 'submit', :class => 'btn btn-primary', data: {disable_with: "<i class='fa fa-spinner fa-spin'></i>"}) do
                %i.fa.fa-search
      .row
        - unless browser.device.mobile? and params[:customer_id].present?
          %div.col-sm-12.col-md-4
            - if params[:new_customer_message].blank?
              %p
                %a#new_customer_message.btn.btn-default.btn-sm{:href => sms_messages_path(new_customer_message: true), title: 'New Message'}
                  %i.fa.fa-edit.fa-lg
                  New Message
            #customer_list{style: "height: 70%; overflow-y: auto;"}
              - unless params[:new_customer_message].blank?
                .info-box
                  %span.info-box-icon.bg-blue
                    %i.fa.fa-user
                  .info-box-content
                    %span.info-box-number
                      %i.fa.fa-user
                      New Message
              - @customers.each do |customer|
                - if @active_customer and customer == @active_customer and not browser.device.mobile?
                  #active_customer.info-box
                    %span.info-box-icon.bg-blue
                      - unless customer.blank? or customer.initials.blank?
                        = customer.initials
                      - else
                        %i.fa.fa-user
                    .info-box-content
                      %span.info-box-number
                        .pull-right
                          %small= customer.sms_messages.last.created_at.strftime("%-m/%-d/%y")
                        = customer.identity
                        %p
                          %small= truncate(customer.sms_messages.last.body)
                - else
                  %a.info-box{:href => customer_sms_messages_path(customer)}
                    %span.info-box-icon
                      .text-muted
                        - unless customer.blank? or customer.initials.blank?
                          = customer.initials
                        - else
                          %i.fa.fa-user
                    .info-box-content
                      %span.info-box-number.text-muted
                        .pull-right
                          %small= customer.sms_messages.last.created_at.strftime("%-m/%-d/%y")
                        = customer.identity
                        %p
                          %small= truncate(customer.sms_messages.last.body)
        - unless browser.device.mobile? and params[:customer_id].blank?
          .col-sm-12.col-md-8
            .box.box-primary
              - if @sms_messages.present?
                - @sms_messages.order(:created_at).group_by{|s| s.customer}.each_with_index do |(customer, sms_messages), index|
                  .box-header.with-border
                    = form_tag send_text_sms_messages_path, :method => 'post', :class => "form-inline" do
                      .col-md-12
                        .input-group.mb-12
                          -# %input.form-control{"aria-describedby" => "basic-addon2", "aria-label" => "Recipient's username", :placeholder => "Message", :type => "text"}/
                          = hidden_field_tag :to, nil, value: customer.twilio_formated_phone_number
                          = hidden_field_tag :customer_id, nil, value: @active_customer.id
                          = text_field_tag :body, nil, :placeholder => "Message", class: "form-control", type: 'text', required: true
                          .input-group-append
                            %button.btn.btn-primary{:type => 'submit', data: {disable_with: "<i class='fa fa-spinner fa-spin'></i>"}}
                              %i.fa.fa-send
                    .pull-left
                      %small= customer.identity unless customer.blank?
                    .pull-right
                      %small= customer.phone unless customer.blank?
                  .box-body
                    %div{id: 'sms_messages_list'}
                      - sms_messages.each do |sms_message|
                        .row
                          .col-md-12
                            %div{class: sms_message.sent_from_company? ? 'pull-right' : 'pull-left'}
                              .card{class: sms_message.sent_from_company? ? 'text-white bg-primary' : 'bg-light'}
                                .card-body= sms_message.body
                              %small.text-muted= sms_message.created_at.in_time_zone(current_user.time_zone).strftime("%-m/%-d/%y %l:%M%p")
                    %div{id: 'endless_page'}
                      %br
                      %p.text-center{id: "spinner", style: 'display:none;'}
                        %i.fa.fa-spinner.fa-spin.fa-2x.fa-fw
                        %span.sr-only Loading...
                      %p.text-center= link_to "Load More...", sms_messages_path(:page => @sms_messages.next_page), :class => 'load-more-sms-messages btn btn-default', :remote => true, :onclick => "$(this).hide(); $('#spinner').show();" if @sms_messages.next_page
              - elsif params[:new_customer_message].present?
                .box-header.with-border
                  = form_tag send_text_sms_messages_path, :method => 'post', :class => "form-inline" do
                    #new_customer_message_form.col-md-12
                      .form-group
                        = select_tag :customer_id, options_for_select([]), class: "form-control input-lg", prompt: 'Select Account', style: 'width: 33%;', required: true
                      %br
                      .input-group.mb-12
                        -# %input.form-control{"aria-describedby" => "basic-addon2", "aria-label" => "Recipient's username", :placeholder => "Message", :type => "text"}/
                        =# text_field_tag :to, nil, value: customer.twilio_formated_phone_number
                        =# text_field_tag :customer_id, nil, value: @active_customer.id
                        = text_field_tag :body, nil, :placeholder => "Message", class: "form-control", type: 'text', required: true
                        .input-group-append
                          %button.btn.btn-primary{:type => 'submit', data: {disable_with: "<i class='fa fa-spinner fa-spin'></i>"}}
                            %i.fa.fa-send
                  -#
                    .pull-left
                      %small= customer.identity unless customer.blank?
                    .pull-right
                      %small= customer.phone unless customer.blank?
                .box-body{style: 'height: 200px;'}
                  %div{id: 'sms_messages_list'}
              - else
                .box-body{style: 'height: 200px;'}
                  %h3.text-center No Conversation Selected

          -#
            .col-md-8
              .box.box-primary
                #v-pills-tabContent.tab-content
                  -#
                    - @sms_messages.order(:created_at).group_by{|s| s.customer}.each_with_index do |(customer, sms_messages), index|
                      .tab-pane.fade{class: index == 0 ? 'active show' : '', id: "customer_#{customer.id}", "aria-labelledby" => "v-pills-home-tab", :role => "tabpanel"}
                        .box-header.with-border
                          = form_tag send_text_sms_messages_path, :method => 'post', :class => "form-inline" do
                            .col-md-12
                              .input-group.mb-12
                                -# %input.form-control{"aria-describedby" => "basic-addon2", "aria-label" => "Recipient's username", :placeholder => "Message", :type => "text"}/
                                = hidden_field_tag :to, nil, value: customer.twilio_formated_phone_number
                                = text_field_tag :body, nil, :placeholder => "Message", class: "form-control", type: 'text', required: true
                                .input-group-append
                                  %button.btn.btn-primary{:type => 'submit', data: {disable_with: "<i class='fa fa-spinner fa-spin'></i>"}}
                                    %i.fa.fa-send
                          .pull-left
                            %small= customer.identity unless customer.blank?
                          .pull-right
                            %small= customer.phone unless customer.blank?
                        .box-body
                          %div{id: 'sms_messages_list'}
                            - sms_messages.each do |sms_message|
                              .row
                                .col-md-12
                                  %div{class: sms_message.sent_from_company? ? 'pull-right' : 'pull-left'}
                                    .card{class: sms_message.sent_from_company? ? 'text-white bg-primary' : 'bg-light'}
                                      .card-body= sms_message.body
                                    %small.text-muted= sms_message.created_at.in_time_zone(current_user.time_zone).strftime("%-m/%-d/%y %l:%M%p")
                          %div{id: 'endless_page'}
                            %br
                            %p.text-center{id: "spinner", style: 'display:none;'}
                              %i.fa.fa-spinner.fa-spin.fa-2x.fa-fw
                              %span.sr-only Loading...
                            %p.text-center= link_to "Load More...", sms_messages_path(:page => @sms_messages.next_page), :class => 'load-more-sms-messages btn btn-default', :remote => true, :onclick => "$(this).hide(); $('#spinner').show();" if @sms_messages.next_page
          - else
            %h3.text-center No Messages

:javascript
  // Make sure select2 isn't applied multiple times by turbolinks
  $(document).on('turbolinks:before-cache', function() {
    $('select#customer_id').select2('destroy');
  });

  $(document).on('turbolinks:load', function() {
    $('select#customer_id').select2({
      theme: 'bootstrap',
      minimumInputLength: 3,
      dropdownParent: $("#new_customer_message_form"),
      ajax: {
        url: '/accounts',
        dataType: 'json',
        delay: 250
      }
    });
  });