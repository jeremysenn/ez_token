.content-wrapper
  .container
    / Content Header (Page header)
    %section.content-header
      = render 'shared/flash_messages'
      %h1
        = current_user.company.name
        %small Dashboard
        .pull-right
          = form_tag transactions_path, id: 'transfers_search_form', method: 'get', class: 'form-inline' do |f|
            .input-group
              = hidden_field_tag :type, 'Transfer'
              = search_field_tag :transaction_id, params[:transaction_id], :placeholder => "Search Transfer ID", class: "form-control", autofocus: true
              .input-group-append
                %button.btn.btn-primary{:type => "submit", data: {disable_with: "<i class='fa fa-spinner fa-spin'></i>"}}
                  %i.fa.fa-search
    / Main content
    %section.content
      = form_tag root_path, id: 'device_selection_form', method: 'get', class: 'form-inline' do |f|
        .input-group
          %p= select_tag :device_id, options_for_select(@devices.map{ |device| ["#{device.id} - #{device.description}", device.id] }, @device.id), onchange: "this.form.submit();", class: "form-control input-lg"
          -#
            .input-group-append
              %button.btn.btn-primary{:type => "submit", data: {disable_with: "<i class='fa fa-spinner fa-spin'></i>"}}
                Go
      -#
        .row
          - @devices.each do |device|
            .col-lg-3.col-xs-6
              / small box
              .small-box{class: @device == device ? 'bg-green' : 'bg-gray disabled'}
                .inner
                  %h3= device.id
                  %p= device.description
                .icon
                  %i.fa.fa-money
                - unless @device == device
                  %a.small-box-footer{:href => root_path(device_id: device.id)}
                    Show
                    %i.fa.fa-arrow-circle-right
                - else
                  .small-box-footer= @device.online.blank? ? 'N/A' : "#{device_state_descriptions[@device.online.to_i].truncate(15)}"
        / /.row

      .row
        .col-md-6
          .box.box-primary{"data-widget" => "box-widget"}
            .box-header.with-border
              %h3.box-title 
                %i.fa.fa-bolt
                Status
              .box-tools.pull-right
            .box-body.no-padding
              .table-responsive
                %table.table.table-condensed.table-bordered
                  %thead
                    %tr
                      %th{:scope => "col"} ID
                      %th{:scope => "col"} Name
                      %th{:scope => "col"} State
                      %th{:scope => "col"} Status
                      %th{:scope => "col"} Remaining
                      %th
                  %tbody
                    %tr
                      %td= link_to @device.id, @device
                      %td= @device.description
                      %td= @device.online.blank? ? 'N/A' : "#{device_state_descriptions[@device.online.to_i].truncate(15)}"
                      %td
                        - if @device.critical_status?
                          %a.btn.btn-xs.btn-danger{"data-content" => "#{@device.caution_status_description}", "data-toggle" => "popover", "data-trigger" => "focus",:tabindex => "0", :title => "#{@device.caution_status_description}"} 
                            Critical
                        - elsif @device.caution_status?
                          %a.btn.btn-xs.bg-orange{"data-content" => "#{@device.caution_status_description}", "data-toggle" => "popover", "data-trigger" => "focus",:tabindex => "0", :title => "#{@device.caution_status_description}"}
                            Caution
                        - else
                          = @device.status_string
                      %td= number_to_currency(@device.remaining)
                      %td= link_to 'More', @device, class: 'btn btn-primary btn-sm'
              .box-footer
                -#
                  .pull-right= paginate @customers, param_name: 'result1'

          .box.box-warning{"data-widget" => "box-widget"}
            .box-header.with-border
              %h3.box-title 
                %i.fa.fa-bolt
                Bins
              .box-tools.pull-right
            .box-body.no-padding
              - unless @devices.blank?
                .table-responsive
                  %table.table.table-condensed.table-bordered
                    %thead
                      %tr
                        - if @bin_1_column_count > 0
                          %th{:scope => "col"} Bin 1
                        - if @bin_2_column_count > 0
                          %th{:scope => "col"} Bin 2
                        - if @bin_3_column_count > 0
                          %th{:scope => "col"} Bin 3
                        - if @bin_4_column_count > 0
                          %th{:scope => "col"} Bin 4
                        - if @bin_5_column_count > 0
                          %th{:scope => "col"} Bin 5
                        - if @bin_6_column_count > 0
                          %th{:scope => "col"} Bin 6
                        - if @bin_7_column_count > 0
                          %th{:scope => "col"} Bin 7
                        - if @bin_8_column_count > 0
                          %th{:scope => "col"} Bin 8
                    %tbody
                      = render partial: "devices/bin_details", locals: {device: @device}
              - else
                &nbsp;
                None
              .box-footer
                -#
                  .pull-right= paginate @customers, param_name: 'result1'

        .col-md-6
          / ATM Cash Chart
          .box.box-success
            .box-header.with-border
              %h3.box-title 
                %i.fa.fa-money
                Cash
              .box-tools.pull-right
                = form_tag root_path, :method => 'get', :class => "form-inline" do
                  = hidden_field_tag 'device_id', @device.id
                  = text_field_tag :start_date, nil, :placeholder => "Start", value: @start_date, class: "input-sm", 'data-provide' => 'datepicker', 'data-date-format' => "yyyy-mm-dd", 'data-date-autoclose' => true, readonly: true
                  To
                  = text_field_tag :end_date, nil, :placeholder => "End", value: @end_date, class: "input-sm", 'data-provide' => 'datepicker', 'data-date-format' => "yyyy-mm-dd", 'data-date-autoclose' => true, readonly: true
                  &nbsp;
                  = button_tag(:type => 'submit', :class => 'btn btn-primary btn-sm', data: {disable_with: "<i class='fa fa-spinner fa-spin'></i>"}) do
                    Go
                -#
                  %button.btn.btn-box-tool{"data-widget" => "collapse", :type => "button"}
                    %i.fa.fa-minus
                  %button.btn.btn-box-tool{"data-widget" => "remove", :type => "button"}
                    %i.fa.fa-times
            .box-body
              .chart
                %canvas#myChart{:style => "height:250px"}
            / /.box-body
          / /.box

          -#
            .box.box-success{"data-widget" => "box-widget"}
              .box-header.with-border
                %h3.box-title
                  %i.fa.fa-dollar
                  Recent Payments
                .box-tools.pull-right
                  = form_tag payment_batches_path, id: 'payment_batches_search_form', method: 'get', class: 'form-inline' do |f|
                    .input-group.input-group-sm
                      = search_field_tag :q, params[:q], :placeholder => "Search", class: "form-control input-lg", autofocus: true
                      .input-group-append
                        %button.btn.btn-success{:type => "submit", data: {disable_with: "<i class='fa fa-spinner fa-spin'></i>"}}
                          %i.fa.fa-search
                  -#
                    %button.btn.btn-box-tool{id: 'box_tool_collapse', "data-toggle" => "tooltip", "data-widget" => "collapse", :title => "Collapse", :type => "button"}
                      %i.fa.fa-minus
                    %button.btn.btn-box-tool{id: 'box_tool_remove', "data-toggle" => "tooltip", "data-widget" => "remove", :title => "Remove", :type => "button"}
                      %i.fa.fa-times
              .box-body.no-padding
                -# .text-success= payment_batch.processed_status
                - unless @processed_payment_batches.blank?
                  .table-responsive
                    %table.table.table-condensed
                      %thead
                        %tr
                          %th{:scope => "col"} Date
                          %th{:scope => "col"} First
                          %th{:scope => "col"} Last
                          %th{:scope => "col"} Amt
                          %th{:scope => "col"} Processed
                          %th
                      %tbody
                        - @processed_payment_batches.each do |payment_batch|
                          - payment_batch.payments.each do |payment|
                            %tr{class: "#{payment.customer.blank? ? 'table-danger' : ''}"}
                              %td= payment_batch.created_at.strftime("%B %-d, %Y")
                              %td
                                - unless payment.customer.blank?
                                  = payment.customer.first_name
                                - else
                                  Not found
                              %td
                                - unless payment.customer.blank?
                                  = payment.customer.last_name
                                - else
                                  Not found
                              %td= number_to_currency(payment.PaymentAmt)
                              %td= payment.Processed? ? 'Yes' : 'No'
                              %td= link_to 'More', payment_batch, class: 'btn btn-primary btn-sm'
                - else
                  &nbsp;
                  None
              .box-footer
                -#
                  .pull-right= link_to 'More', payment_batch, class: 'btn btn-primary'

      / Info boxes
      .row
        .col-md-4.col-sm-6.col-xs-12
          .info-box
            %span.info-box-icon.bg-aqua
              %i.fa.fa-male.fa-lg
            .info-box-content
              %span.info-box-text PAYEES
              %span.info-box-number
                = @payees_count
            / /.info-box-content
          / /.info-box
        / /.col
        .col-md-4.col-sm-6.col-xs-12
          .info-box
            %span.info-box-icon.bg-blue
              %i.fa.fa-dollar.fa-lg
            .info-box-content
              %span.info-box-text TRANSFERS / AMOUNT
              %span.info-box-number= "#{@transfers_count} / #{number_to_currency(@transfers_amount)}"
            / /.info-box-content
          / /.info-box
        / /.col
        / fix for small devices only
        .clearfix.visible-sm-block
        .col-md-4.col-sm-6.col-xs-12
          .info-box
            %span.info-box-icon.bg-green
              %i.fa.fa-money.fa-lg
            .info-box-content
              %span.info-box-text WITHDRAWALS / AMOUNT
              %span.info-box-number= "#{@withdrawals_count} / #{number_to_currency(@withdrawals_amount)}"
            / /.info-box-content
          / /.info-box
        / /.col
      / /.row

    

:javascript
  $('[data-toggle="popover"]').popover();

  $(document).on("turbolinks:load", function() {
    var ctx = document.getElementById("myChart").getContext("2d");

    const colors = {
      green: {
        fill: '#e0eadf',
        stroke: '#5eb84d',
      },
      lightBlue: {
        stroke: '#6fccdd',
      },
      darkBlue: {
        fill: '#92bed2',
        stroke: '#3282bf',
      },
      purple: {
        fill: '#8fa8c8',
        stroke: '#75539e',
      },
    };

    const transferred = #{@transfers_week_data};
    const withdrawn = #{@withdrawals_week_data};
    const xData = #{raw @week_of_dates_data.uniq};

    const myChart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: xData,
        datasets: [{
          label: "Withdrawn",
          fill: true,
          backgroundColor: colors.green.fill,
          pointBackgroundColor: colors.green.stroke,
          borderColor: colors.green.stroke,
          pointHighlightStroke: colors.green.stroke,
          borderCapStyle: 'butt',
          data: withdrawn,
        }, {
          label: "Transferred",
          fill: true,
          backgroundColor: colors.darkBlue.fill,
          pointBackgroundColor: colors.darkBlue.stroke,
          borderColor: colors.darkBlue.stroke,
          pointHighlightStroke: colors.darkBlue.stroke,
          data: transferred,
        }]
      },
      options: {
        responsive: true,
        // Can't just use `stacked: true` like the docs say
        scales: {
          yAxes: [{
            //stacked: true,
            stacked: false,
          }]
        },
        animation: {
          duration: 750,
        },
      }
    });
  });