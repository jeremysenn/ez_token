.content-wrapper
  .container
    / Content Header (Page header)
    %section.content-header
      = render 'shared/flash_messages'
      %h1
        %i.fa.fa-dollar
        Payment Batch
    / Main content
    %section.content
      / Default box
      .box.box-primary
        .box-header.with-border
          %h3.box-title 
            = @payment_batch.created_at.strftime("%B %-d, %Y")
          .box-tools.pull-right
            - unless @payment_batch.processed?
              - if current_user.admin?
                = form_for @payment_batch do |f|
                  = f.hidden_field :Processed, value: 1
                  %button.btn.bg-orange{:type => "submit", data: {disable_with: "<i class='fa fa-refresh fa-spin'></i> Process"}}
                    %i.fa.fa-refresh
                    Process
            - else
              .text-success= @payment_batch.processed_status
        .box-body
          %ul#myTab.nav.nav-tabs{:role => "tablist"}
            %li.nav-item
              %a#payments-tab.nav-link.active{"aria-controls" => "payments", "aria-selected" => "true", "data-toggle" => "tab", :href => "#payments", :role => "tab"} Payments
            %li.nav-item
              %a#csv-tab.nav-link{"aria-controls" => "csv", "aria-selected" => "false", "data-toggle" => "tab", :href => "#csv", :role => "tab"} CSV
          #myTabContent.tab-content
            #payments.tab-pane.fade.show.active{"aria-labelledby" => "home-tab", :role => "tabpanel"}
              .table-responsive
                %table.table.table-striped
                  %thead
                    %tr
                      %th{:scope => "col"} TranID
                      %th{:scope => "col"} ReferenceNbr
                      %th{:scope => "col"} PayeeNbr
                      %th{:scope => "col"} CustomerID
                      %th{:scope => "col"} FirstName
                      %th{:scope => "col"} LastName
                      %th{:scope => "col"} PaymentAmt
                      %th{:scope => "col"} Processed
                      - unless @payment_batch.processed?
                        %th
                  %tbody
                    - @payment_batch.payments.each do |payment|
                      %tr{class: "#{(payment.customer.blank? or payment.TranID == 0) ? 'table-danger' : ''}"}
                        %td
                          - unless payment.TranID.blank?
                            - if payment.TranID == 0
                              Duplicate reference number
                            - else
                              = link_to payment.TranID, payment.ezcash_transaction
                          - else
                            N/A
                        %td= payment.ReferenceNbr
                        %td= payment.PayeeNbr
                        %td
                          - unless payment.customer.blank?
                            = link_to payment.CustomerID, payment.customer
                          - else
                            Not found
                        %td
                          - unless payment.customer.blank?
                            = payment.customer.first_name
                          - else
                            Not found
                        %td
                          - unless payment.customer.blank?
                            = payment.customer.last_name
                          - else
                            Not found
                        %td= number_to_currency(payment.PaymentAmt)
                        %td= payment.Processed? ? 'Yes' : 'No'
                        - unless @payment_batch.processed?
                          %td
                            = link_to 'Edit', edit_payment_path(payment), class: 'btn btn-primary btn-sm'
                            = link_to 'Delete', payment, :method => :delete, class: 'btn btn-danger btn-sm', :data => { :confirm => 'Are you sure?' }

                
            #csv.tab-pane.fade.show{"aria-labelledby" => "home-tab", :role => "tabpanel"}
              .table-responsive
                %table.table.table-striped
                  - CSV.parse(@payment_batch.CSVFile).each do |row|
                    %tr
                      - row.each do |element|
                        %td= element